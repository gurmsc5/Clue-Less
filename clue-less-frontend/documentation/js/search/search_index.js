var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.613,1,1.016]],["body/components/AppComponent.html",[0,0.966,1,1.712,2,1.906,3,0.447,4,0.39,5,1.574,6,1.574,7,1.574,8,1.574,9,0.39,10,2.605,11,1.574,12,2.843,13,2.104,14,2.645,15,2.113,16,4.781,17,2.113,18,4.235,19,0.39,20,1.056,21,5.33,22,0.57,23,0.037,24,1.285,25,1.574,26,1.574,27,3.496,28,3.496,29,0.869,30,3.155,31,0.57,32,0.638,33,0.447,34,0.709,35,3.155,36,1.755,37,1.971,38,1.971,39,1.574,40,2.113,41,2.113,42,1.574,43,2.55,44,1.574,45,0.765,46,1.574,47,0.959,48,1.574,49,1.057,50,1.574,51,0.959,52,0.856,53,1.574,54,0.959,55,0.959,56,1.574,57,1.057,58,1.42,59,1.574,60,1.574,61,0.026,62,0.026]],["title/modules/AppModule.html",[63,2.503,64,1.894]],["body/modules/AppModule.html",[1,1.846,3,0.301,4,0.263,9,0.263,13,0.786,23,0.039,31,1.076,32,0.43,33,0.301,34,0.478,47,1.463,49,1.613,51,1.463,52,0.646,54,1.463,55,0.972,57,1.613,61,0.02,62,0.02,64,3.668,65,1.183,66,1.998,67,1.756,68,1.756,69,1.756,70,1.756,71,1.866,72,2.677,73,2.64,74,1.756,75,1.512,76,2.128,77,3.199,78,2.64,79,3.199,80,2.64,81,3.199,82,2.64,83,1.512,84,2.128,85,2.128,86,3.199,87,1.183,88,1.756,89,2.128,90,1.329,91,1.756,92,2.128,93,2.128,94,1.329,95,1.998,96,1.512,97,1.512,98,1.998,99,2.128,100,2.273,101,1.512,102,1.329,103,3.199,104,2.128,105,3.199,106,2.128,107,3.199,108,2.128,109,3.199,110,2.128,111,2.128,112,3.199,113,2.128,114,1.756,115,3.199,116,2.128,117,3.199,118,2.128,119,3.199,120,2.128,121,3.199,122,2.128,123,3.199,124,2.128,125,3.199,126,1.512,127,1.329,128,1.756,129,3.199,130,2.128,131,2.128,132,1.756,133,1.756]],["title/modules/AppRoutingModule.html",[63,2.503,72,1.686]],["body/modules/AppRoutingModule.html",[0,1.017,3,0.496,4,0.433,9,0.433,23,0.038,31,0.996,32,0.708,33,0.496,34,0.787,47,1.379,51,1.379,52,1.076,54,1.379,55,1.53,61,0.028,62,0.028,65,1.947,72,2.523,78,2.891,80,3.745,88,2.891,90,2.187,91,2.891,127,2.187,128,2.891,134,3.502,135,3.502,136,4.537,137,3.143,138,2.187,139,1.947,140,5.323,141,3.502,142,3.745,143,3.502,144,3.502,145,3.502,146,2.891,147,3.502,148,3.502]],["title/components/BannerComponent.html",[0,0.613,47,0.922]],["body/components/BannerComponent.html",[0,0.869,1,0.865,2,1.659,3,0.366,4,0.319,5,1.288,6,1.288,7,1.288,8,1.288,9,0.319,11,1.288,12,2.707,13,2.004,15,1.839,17,1.839,19,0.319,23,0.038,29,1.016,31,0.467,32,0.522,33,0.366,34,0.581,36,1.436,38,2.302,39,1.288,40,1.839,41,1.839,42,1.288,43,2.339,44,1.288,45,0.666,46,1.288,47,1.425,48,1.288,49,0.865,50,1.288,51,0.785,52,0.947,53,1.288,54,0.785,55,1.307,56,1.288,57,0.865,58,1.162,59,1.288,60,1.288,61,0.023,62,0.023,142,3.043,149,2.131,150,1.361,151,2.685,152,4.299,153,3.686,154,1.235,155,2.928,156,1.588,157,2.582,158,2.582,159,0.865,160,1.839,161,2.619,162,2.619,163,2.685,164,2.582,165,2.619,166,1.835,167,2.582,168,1.613,169,1.613,170,1.835,171,1.835,172,2.582,173,3.043,174,2.582,175,2.131,176,2.131,177,2.131,178,2.131,179,1.835,180,2.619,181,1.835,182,3.87,183,2.131,184,3.686,185,2.582,186,2.582,187,4.299,188,4.688,189,3.686,190,2.582,191,2.131,192,2.131,193,1.436,194,2.131,195,2.582,196,2.582,197,2.582,198,1.835,199,2.582,200,2.131]],["title/interfaces/Card.html",[201,1.12,202,1.686]],["body/interfaces/Card.html",[3,0.579,4,0.505,9,0.505,19,0.505,20,1.246,22,0.904,23,0.037,24,2.201,33,0.579,45,1.017,61,0.031,62,0.031,201,1.509,202,2.78,203,2.273,204,2.904,205,4.958,206,4.087,207,3.374,208,3.374,209,3.374]],["title/interfaces/Game.html",[52,0.613,201,1.12]],["body/interfaces/Game.html",[3,0.57,4,0.497,9,0.497,19,0.497,20,1.235,22,0.97,23,0.037,24,2.384,33,0.57,52,1.001,61,0.03,62,0.03,201,1.486,203,2.238,210,3.322,211,3.497,212,3.497,213,1.66,214,3.497,215,3.352]],["title/injectables/GameService.html",[216,1.016,217,1.686]],["body/injectables/GameService.html",[3,0.375,4,0.15,9,0.15,13,0.978,14,0.759,19,0.15,20,0.51,22,0.837,23,0.038,24,1.411,25,1.872,26,2.09,29,1.306,31,0.787,32,0.246,33,0.172,34,0.273,45,0.837,52,1.128,55,1.625,61,0.013,62,0.013,71,0.833,87,0.676,101,2.206,139,1.926,154,0.685,156,0.755,159,1.257,160,0.607,161,1.453,198,1.453,211,2.813,213,1.461,214,1.277,215,2.961,216,0.685,217,1.137,218,0.759,219,0.864,220,3.311,221,2.185,222,2.185,223,2.647,224,2.562,225,2.185,226,2.045,227,1.453,228,2.045,229,2.045,230,2.647,231,2.045,232,1.216,233,3.104,234,1.337,235,1.216,236,1.706,237,2.045,238,2.647,239,1.216,240,2.045,241,2.722,242,3.463,243,2.647,244,2.045,245,1.76,246,1.688,247,2.045,248,2.691,249,2.045,250,1.216,251,2.045,252,2.185,253,2.647,254,2.045,255,1.689,256,2.045,257,1.216,258,2.045,259,1.872,260,2.045,261,2.045,262,1.688,263,2.045,264,3.99,265,3.463,266,1.216,267,2.045,268,4.189,269,3.463,270,2.045,271,1.216,272,2.329,273,3.104,274,2.045,275,1.216,276,2.045,277,1.216,278,1.688,279,2.045,280,1.688,281,1.688,282,2.647,283,2.045,284,1.216,285,2.045,286,1.216,287,1.003,288,2.045,289,1.453,290,2.647,291,2.045,292,1.216,293,2.045,294,1.216,295,2.045,296,1.216,297,1.216,298,0.607,299,1.216,300,1.216,301,1.216,302,0.759,303,0.547,304,0.864,305,0.864,306,4.189,307,2.045,308,1.003,309,1.216,310,1.216,311,1.216,312,1.216,313,1.216,314,1.216,315,1.216,316,1.216,317,1.216,318,1.216,319,1.216,320,1.216,321,1.216,322,1.216,323,1.216,324,2.647,325,1.216,326,1.216,327,2.647,328,1.216,329,1.216,330,1.216,331,1.216,332,1.003,333,1.216,334,2.045,335,1.216,336,1.216,337,1.216,338,2.045,339,1.216,340,1.216,341,1.216,342,1.216,343,1.216,344,1.216,345,1.216,346,2.045,347,1.216,348,1.216,349,1.216,350,1.216,351,1.216,352,1.216,353,1.216,354,1.216,355,1.216,356,1.216,357,1.216,358,1.216,359,1.216,360,1.216,361,1.003,362,1.216,363,1.216,364,1.216,365,1.216]],["title/components/GameSessionComponent.html",[0,0.613,51,0.922]],["body/components/GameSessionComponent.html",[0,0.576,1,0.452,2,1.004,3,0.191,4,0.167,5,0.673,6,0.673,7,0.673,8,0.673,9,0.167,11,0.673,12,2.184,13,1.616,15,1.114,17,1.114,19,0.167,20,0.556,22,0.599,23,0.038,29,1.206,31,0.82,32,0.273,33,0.191,34,0.303,36,2.041,37,1.394,38,2.834,39,0.673,40,1.114,41,1.114,42,0.673,43,1.654,44,0.673,45,0.663,46,0.673,47,0.41,48,0.673,49,0.452,50,0.673,51,1.008,52,1.065,53,0.673,54,0.41,55,1.008,56,0.673,57,0.452,58,0.607,59,0.673,60,0.673,61,0.014,62,0.014,90,2.834,114,1.114,138,0.843,139,0.751,150,0.824,151,1.782,154,0.748,155,2.07,156,0.824,159,1.23,160,2.333,162,3.407,163,3.41,165,2.355,166,2.355,168,2.293,169,2.07,170,2.027,171,2.027,175,1.114,176,2.736,177,1.842,178,1.114,179,1.586,180,1.586,181,0.959,182,1.114,192,2.355,193,0.751,194,1.114,200,1.842,211,0.843,213,1.111,217,2.327,220,2.07,227,2.355,234,1.402,236,0.909,245,1.467,248,0.751,252,2.736,255,1.004,259,2.264,280,1.114,281,1.842,298,0.673,303,0.607,332,2.355,366,3.224,367,1.114,368,2.853,369,2.232,370,2.853,371,3.314,372,2.232,373,3.314,374,1.35,375,3.314,376,3.454,377,2.232,378,2.232,379,1.35,380,1.35,381,1.35,382,2.232,383,1.35,384,1.35,385,2.232,386,1.35,387,0.959,388,1.35,389,1.114,390,1.35,391,1.35,392,1.35,393,1.35,394,1.35,395,2.853,396,1.35,397,2.232,398,1.35,399,2.232,400,1.114,401,1.35,402,1.35,403,1.35,404,0.959,405,1.35,406,1.35,407,1.35,408,1.35,409,1.35,410,1.394,411,2.232,412,2.232,413,2.232,414,2.232,415,2.232,416,2.232,417,1.842,418,2.355,419,1.842,420,3.03,421,1.35,422,1.842,423,1.35,424,2.333,425,1.35,426,1.35,427,1.35,428,1.35,429,1.114,430,1.35,431,1.35,432,1.114,433,1.35,434,1.842,435,1.35,436,1.35,437,1.35,438,2.232,439,1.35,440,1.35,441,1.35,442,1.35,443,2.232,444,1.35,445,1.35,446,1.35,447,1.35,448,2.355,449,1.35,450,1.35,451,1.35,452,1.35,453,1.35,454,1.35,455,2.232,456,1.35,457,1.35,458,1.114,459,1.35]],["title/components/GameSessionCreatorComponent.html",[0,0.613,54,0.922]],["body/components/GameSessionCreatorComponent.html",[0,0.789,1,0.732,2,1.469,3,0.309,4,0.27,5,1.09,6,1.09,7,1.09,8,1.09,9,0.27,11,1.09,12,2.584,13,1.913,15,1.628,17,1.628,19,0.27,20,0.813,22,0.395,23,0.037,25,1.09,26,1.09,29,1.193,31,0.91,32,0.442,33,0.309,34,0.491,39,1.09,40,1.628,41,1.628,42,1.09,43,2.161,44,1.09,45,0.91,46,1.09,47,0.664,48,1.09,49,0.732,50,1.09,51,0.664,52,1.105,53,1.09,54,1.317,55,1.767,56,1.09,57,0.732,58,0.984,59,1.09,60,1.09,61,0.02,62,0.02,126,1.553,127,2.895,138,1.365,146,2.694,150,1.205,151,2.439,154,1.094,155,2.705,156,0.807,159,1.094,160,1.949,168,1.365,169,1.365,213,0.732,217,2.801,220,2.439,234,1.688,236,0.89,245,1.094,246,2.694,303,0.984,366,3.293,376,1.804,387,1.553,389,1.804,400,1.804,460,1.804,461,3.905,462,3.263,463,3.905,464,4.331,465,2.185,466,4.331,467,5.038,468,2.185,469,3.263,470,2.185,471,2.185,472,3.263,473,4.331,474,3.263,475,2.038,476,3.263,477,3.263,478,2.185,479,2.185,480,2.185,481,2.185,482,1.365,483,2.185,484,2.185,485,2.185,486,3.263,487,2.185,488,1.804]],["title/components/GameboardComponent.html",[0,0.613,49,1.016]],["body/components/GameboardComponent.html",[0,0.917,1,0.957,2,1.781,3,0.404,4,0.353,5,1.425,6,1.425,7,1.425,8,1.425,9,0.353,11,1.425,12,2.777,13,2.056,15,1.974,17,1.974,19,0.353,20,0.986,22,0.516,23,0.038,24,1.612,25,1.425,26,1.425,29,1.09,31,0.516,32,0.577,33,0.404,34,0.642,36,1.588,37,1.784,39,1.425,40,1.974,41,1.974,42,1.425,43,2.446,44,1.425,45,0.715,46,1.425,47,0.868,48,1.425,49,1.643,50,1.425,51,0.868,52,0.799,53,1.425,54,0.868,55,0.868,56,1.425,57,0.957,58,1.285,59,1.425,60,1.425,61,0.024,62,0.024,156,1.677,173,2.357,180,2.029,181,2.029,198,2.029,202,2.2,429,2.357,432,3.266,434,2.357,458,3.266,488,3.266,489,2.357,490,3.956,491,4.54,492,3.956,493,4.54,494,3.956,495,3.956,496,2.856,497,2.856,498,2.856,499,3.956,500,3.956,501,4.901,502,2.357,503,2.856,504,2.856]],["title/interceptors/HttpMockGameSessionInterceptor.html",[505,1.686,506,1.894]],["body/interceptors/HttpMockGameSessionInterceptor.html",[3,0.583,4,0.374,9,0.374,19,0.374,22,0.744,23,0.038,29,1.135,31,0.98,32,0.612,33,0.429,34,0.681,45,0.744,52,1.121,61,0.025,62,0.025,71,1.233,87,1.684,102,1.891,150,1.118,154,1.38,156,1.118,159,1.015,161,2.151,193,1.684,211,1.891,212,1.891,213,1.38,216,1.38,234,1.817,236,1.678,241,1.891,245,1.015,248,2.603,272,2.29,298,1.511,302,1.891,303,1.363,404,2.151,482,1.891,506,2.573,507,2.603,508,2.5,509,3.326,510,1.891,511,3.028,512,2.927,513,3.57,514,3.326,515,3.57,516,3.028,517,2.151,518,2.151,519,2.927,520,2.927,521,2.151,522,2.151,523,2.5,524,3.028,525,2.151,526,2.151,527,2.151,528,2.151,529,2.151,530,2.151,531,2.151]],["title/interceptors/HttpMockLobbyInterceptor.html",[505,1.686,532,1.894]],["body/interceptors/HttpMockLobbyInterceptor.html",[3,0.418,4,0.365,9,0.365,19,0.365,22,0.731,23,0.038,29,1.115,31,0.995,32,0.596,33,0.418,34,0.664,45,0.731,52,0.596,55,0.897,61,0.025,62,0.025,71,1.202,87,1.641,102,1.844,150,1.09,154,1.357,156,1.09,159,0.989,212,1.844,213,1.357,216,1.357,234,1.803,236,1.649,241,1.844,248,2.569,255,1.329,259,2.684,272,2.251,298,1.473,302,1.844,303,1.329,308,2.437,424,2.48,482,1.844,507,2.569,509,3.282,510,1.844,512,2.876,513,3.532,514,3.282,515,3.532,517,2.097,518,2.097,519,2.876,520,2.876,521,2.097,522,2.097,525,2.097,526,2.097,527,2.097,528,2.097,529,2.097,530,2.097,531,2.097,532,2.528,533,2.437,534,2.952,535,2.952,536,2.952,537,2.952,538,2.952,539,2.952,540,2.952]],["title/interceptors/HttpMockPlayerInterceptor.html",[505,1.686,541,1.894]],["body/interceptors/HttpMockPlayerInterceptor.html",[3,0.582,4,0.373,9,0.373,19,0.373,22,0.743,23,0.038,29,1.133,31,0.979,32,0.61,33,0.428,34,0.679,45,0.743,61,0.025,62,0.025,71,1.23,87,1.679,102,1.886,139,1.679,150,1.115,154,1.378,156,1.115,159,1.012,213,1.378,216,1.378,234,1.815,236,1.675,241,1.886,245,1.89,248,2.599,272,2.286,278,2.492,298,1.507,302,1.886,303,1.359,404,2.145,482,1.886,507,2.599,509,3.321,510,1.886,512,2.921,513,3.565,514,3.321,515,3.565,517,2.145,518,2.145,519,2.921,520,2.921,521,2.145,522,2.145,523,2.492,525,2.145,527,2.145,528,2.145,529,2.145,530,2.145,531,2.145,541,2.568,542,2.492,543,3.019,544,3.019,545,3.019,546,3.019,547,3.019,548,2.492]],["title/injectables/InMemoryDataService.html",[98,1.894,216,1.016]],["body/injectables/InMemoryDataService.html",[3,0.486,4,0.424,9,0.424,14,2.145,19,0.424,23,0.038,29,0.946,31,0.809,32,0.694,33,0.486,34,0.772,45,0.99,61,0.028,62,0.028,94,2.145,95,3.113,96,2.439,97,2.439,98,2.797,139,1.909,150,1.268,154,1.501,159,1.151,193,1.909,216,1.501,218,2.145,255,2.466,272,1.909,305,2.439,424,2.487,448,2.439,475,2.145,549,3.697,550,2.834,551,5.283,552,3.433,553,4.479,554,3.697,555,2.834,556,2.834,557,2.439,558,2.834,559,2.439,560,2.834,561,2.834,562,2.834,563,2.834,564,2.834]],["title/interfaces/Lobby.html",[201,1.12,259,1.513]],["body/interfaces/Lobby.html",[3,0.563,4,0.492,9,0.492,19,0.492,20,1.226,22,0.965,23,0.037,24,2.175,31,0.719,33,0.563,61,0.03,62,0.03,201,1.469,203,2.212,212,3.483,215,3.335,245,1.92,255,2.51,259,2.454,424,2.783,565,3.284]],["title/injectables/MessageService.html",[216,1.016,234,1.016]],["body/injectables/MessageService.html",[3,0.508,4,0.443,9,0.443,14,2.24,19,0.443,20,1.148,22,0.832,23,0.038,24,2.263,25,1.789,26,1.789,29,1.402,31,0.648,32,0.724,33,0.508,34,0.806,45,0.648,58,2.29,61,0.028,62,0.028,154,1.544,159,1.544,160,2.298,213,1.202,214,2.24,216,1.544,218,2.24,234,1.544,236,1.46,305,2.547,566,2.96,567,3.802,568,4.433,569,4.606,570,3.586,571,3.586,572,3.586,573,3.586,574,3.586]],["title/components/MessagesComponent.html",[0,0.613,57,1.016]],["body/components/MessagesComponent.html",[0,0.859,1,0.849,2,1.636,3,0.359,4,0.313,5,1.264,6,1.814,7,1.264,8,1.264,9,0.313,11,1.264,12,2.694,13,1.994,15,1.814,17,1.814,19,0.313,20,0.906,22,0.657,23,0.038,29,1.172,31,0.657,32,0.512,33,0.359,34,0.569,36,1.408,37,1.582,39,1.264,40,1.814,41,1.814,42,1.264,43,2.319,44,1.264,45,0.768,46,1.264,47,0.77,48,1.264,49,0.849,50,1.264,51,0.77,52,0.735,53,1.264,54,0.77,55,0.77,56,1.264,57,1.557,58,2.375,59,1.264,60,1.264,61,0.022,62,0.022,150,1.343,151,2.656,154,1.218,155,2.903,156,0.935,159,0.849,160,1.814,162,2.583,163,3.074,165,1.799,166,1.799,168,1.582,169,2.271,170,3.021,171,1.799,179,1.799,213,0.849,214,2.271,220,1.582,234,1.842,236,1.032,303,1.14,417,2.09,418,2.09,419,2.09,420,2.09,422,2.09,510,1.582,568,3.51,575,2.09,576,4.252,577,3.635,578,3.635,579,2.532,580,2.532,581,2.532,582,2.532,583,2.532,584,2.532,585,2.532,586,2.532,587,2.532,588,2.532,589,2.532,590,2.532,591,2.532,592,2.532,593,2.532,594,2.532]],["title/interfaces/Player.html",[201,1.12,245,1.016]],["body/interfaces/Player.html",[3,0.501,4,0.437,9,0.437,19,0.437,20,1.138,22,1.024,23,0.037,24,2.307,31,0.639,33,0.501,45,0.965,61,0.028,62,0.028,163,3.337,201,1.306,202,3.076,203,1.967,213,1.898,215,3.538,245,1.53,255,2.405,410,3.337,595,2.92,596,5.343,597,5.343,598,5.056]],["title/coverage.html",[599,3.403]],["body/coverage.html",[0,1.078,1,0.962,9,0.355,10,2.37,22,0.519,23,0.038,38,3.775,47,0.873,49,0.962,51,0.873,52,0.58,54,0.873,55,1.207,57,0.962,61,0.024,62,0.024,71,1.618,90,1.793,95,1.793,98,1.793,100,2.04,127,1.793,149,2.37,183,2.37,201,1.814,202,1.597,204,2.04,210,2.37,216,1.526,217,1.597,219,2.822,234,0.962,245,0.962,259,1.433,289,2.04,304,2.04,366,2.822,367,2.37,424,1.433,460,2.37,489,2.37,505,2.532,506,1.793,507,2.732,508,2.37,532,1.793,533,2.37,541,1.793,542,2.37,549,2.37,550,2.37,565,2.37,566,2.37,575,2.37,595,2.37,599,2.37,600,2.871,601,2.871,602,2.871,603,3.971,604,5.334,605,2.871,606,2.871,607,2.871,608,2.871,609,5.157,610,4.913,611,4.913,612,2.37,613,2.871,614,2.37,615,2.37,616,2.871,617,2.37,618,2.37,619,2.871,620,2.871]],["title/dependencies.html",[66,2.275,621,1.804]],["body/dependencies.html",[23,0.038,32,0.795,61,0.03,62,0.03,66,2.457,82,4.032,83,3.47,94,2.457,95,2.457,96,2.795,97,2.795,126,2.795,138,2.457,298,1.963,387,2.795,622,3.934,623,5.964,624,3.934,625,4.884,626,3.934,627,3.934,628,3.934,629,3.934,630,3.934,631,3.934,632,3.934,633,3.934,634,3.934]],["title/miscellaneous/enumerations.html",[635,1.586,636,3.007]],["body/miscellaneous/enumerations.html",[19,0.569,23,0.033,61,0.033,62,0.033,204,3.273,205,4.433,207,3.802,208,3.802,209,3.802,635,2.877,636,3.802,637,4.606]],["title/index.html",[19,0.314,262,2.096,638,2.539]],["body/index.html",[0,0.984,4,0.405,13,1.209,23,0.027,27,2.702,28,2.702,45,0.591,61,0.027,62,0.027,75,2.326,94,3.041,150,1.209,289,2.326,361,3.583,502,2.702,526,2.326,567,2.702,621,2.326,639,4.34,640,3.273,641,4.869,642,2.702,643,3.273,644,3.273,645,4.34,646,5.395,647,5.657,648,3.273,649,3.273,650,3.273,651,3.273,652,3.273,653,3.273,654,3.273,655,3.273,656,3.273,657,3.273,658,4.869,659,4.869,660,3.273,661,5.185,662,3.273,663,3.273,664,3.273,665,3.273,666,4.34,667,5.185,668,4.34,669,4.34,670,3.273,671,5.545,672,3.273,673,3.273,674,3.273,675,4.34,676,3.273,677,3.273,678,3.273,679,3.273,680,3.273,681,4.869,682,3.273,683,3.273,684,2.326,685,3.273,686,3.273]],["title/modules.html",[65,2.292]],["body/modules.html",[23,0.033,61,0.033,62,0.033,64,2.877,65,2.561,72,2.561,83,3.273,410,2.877,687,4.606,688,4.606,689,5.37,690,4.606]],["title/overview.html",[684,2.929]],["body/overview.html",[1,1.935,2,1.603,23,0.037,47,1.542,49,1.7,51,1.542,54,1.542,57,1.7,61,0.028,62,0.028,64,3.858,65,1.98,66,2.865,67,2.94,68,2.94,69,2.94,70,2.94,71,2.066,72,2.821,73,3.786,74,2.94,75,2.53,137,2.224,203,1.98,218,2.224,475,2.224,557,2.53,559,3.258,684,2.53,691,3.561]],["title/properties.html",[20,0.908,621,1.804]],["body/properties.html",[20,1.179,23,0.035,61,0.034,62,0.034,642,3.905,692,4.73]],["title/routes.html",[137,2.575]],["body/routes.html",[23,0.034,61,0.034,62,0.034,137,2.995]],["title/miscellaneous/variables.html",[635,1.586,693,3.007]],["body/miscellaneous/variables.html",[19,0.345,22,0.876,23,0.038,25,2.546,26,2.546,45,0.922,52,0.563,61,0.024,62,0.024,71,2.078,100,2.764,101,1.98,132,3.212,133,2.301,191,2.301,193,1.55,219,1.98,221,2.301,222,3.212,224,3.212,225,3.212,227,1.98,245,0.934,255,2.296,287,3.212,304,2.764,410,3.187,424,1.941,448,1.98,475,1.741,505,1.55,506,1.741,507,1.55,532,1.741,541,1.741,548,4.567,554,3.212,555,2.301,556,2.301,557,1.98,558,2.301,559,1.98,560,2.301,561,2.301,562,2.301,563,2.301,564,2.301,612,2.301,614,2.301,615,3.212,617,2.301,618,2.301,635,1.741,693,2.301,694,2.787,695,2.787,696,2.787,697,2.787,698,2.787,699,3.891,700,3.891,701,3.891,702,3.891,703,3.891,704,2.787,705,2.787,706,2.787,707,2.787,708,2.787,709,2.787,710,2.787,711,4.482,712,4.482,713,4.482,714,4.482,715,2.787]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"interfaces/Card.html":{},"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"injectables/InMemoryDataService.html":{},"interfaces/Lobby.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{},"interfaces/Player.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"coverage.html":{}}}],["0.1.0",{"_index":692,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["0.13.0",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["0.7em",{"_index":455,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["0.8em",{"_index":454,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["0/1",{"_index":610,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":604,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":611,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":616,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":193,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["1.2rem",{"_index":172,"title":{},"body":{"components/BannerComponent.html":{}}}],["1.8em",{"_index":439,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["1/1",{"_index":613,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":392,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["100",{"_index":183,"title":{},"body":{"components/BannerComponent.html":{},"coverage.html":{}}}],["10px",{"_index":504,"title":{},"body":{"components/GameboardComponent.html":{}}}],["12px",{"_index":419,"title":{},"body":{"components/GameSessionComponent.html":{},"components/MessagesComponent.html":{}}}],["13.2.0",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["13.2.6",{"_index":643,"title":{},"body":{"index.html":{}}}],["13.3.1",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["15em",{"_index":427,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["15px",{"_index":501,"title":{},"body":{"components/GameboardComponent.html":{}}}],["18",{"_index":197,"title":{},"body":{"components/BannerComponent.html":{}}}],["1em",{"_index":443,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["1rem",{"_index":169,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/MessagesComponent.html":{}}}],["2",{"_index":475,"title":{},"body":{"components/GameSessionCreatorComponent.html":{},"injectables/InMemoryDataService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":632,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":529,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["20px",{"_index":498,"title":{},"body":{"components/GameboardComponent.html":{}}}],["2c3a41",{"_index":441,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["2em",{"_index":425,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["2px",{"_index":167,"title":{},"body":{"components/BannerComponent.html":{}}}],["3",{"_index":557,"title":{},"body":{"injectables/InMemoryDataService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["333",{"_index":417,"title":{},"body":{"components/GameSessionComponent.html":{},"components/MessagesComponent.html":{}}}],["38",{"_index":607,"title":{},"body":{"coverage.html":{}}}],["3f525c",{"_index":164,"title":{},"body":{"components/BannerComponent.html":{}}}],["4",{"_index":559,"title":{},"body":{"injectables/InMemoryDataService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["405061",{"_index":456,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["42545c",{"_index":422,"title":{},"body":{"components/GameSessionComponent.html":{},"components/MessagesComponent.html":{}}}],["4px",{"_index":420,"title":{},"body":{"components/GameSessionComponent.html":{},"components/MessagesComponent.html":{}}}],["5",{"_index":562,"title":{},"body":{"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["5/13",{"_index":608,"title":{},"body":{"coverage.html":{}}}],["505050",{"_index":450,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["525252",{"_index":445,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["5em",{"_index":435,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["5px",{"_index":503,"title":{},"body":{"components/GameboardComponent.html":{}}}],["5rem",{"_index":186,"title":{},"body":{"components/BannerComponent.html":{}}}],["6",{"_index":691,"title":{},"body":{"overview.html":{}}}],["600px",{"_index":196,"title":{},"body":{"components/BannerComponent.html":{}}}],["7.5.0",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["70px",{"_index":185,"title":{},"body":{"components/BannerComponent.html":{}}}],["8080",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8em",{"_index":459,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["999",{"_index":540,"title":{},"body":{"interceptors/HttpMockLobbyInterceptor.html":{}}}],["a80000",{"_index":586,"title":{},"body":{"components/MessagesComponent.html":{}}}],["a:hover",{"_index":199,"title":{},"body":{"components/BannerComponent.html":{}}}],["absolute",{"_index":500,"title":{},"body":{"components/GameboardComponent.html":{}}}],["activatedroute",{"_index":375,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["actual_component",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["add",{"_index":567,"title":{},"body":{"injectables/MessageService.html":{},"index.html":{}}}],["add(message",{"_index":569,"title":{},"body":{"injectables/MessageService.html":{}}}],["align",{"_index":180,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameboardComponent.html":{}}}],["angular",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"injectables/InMemoryDataService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/common",{"_index":387,"title":{},"body":{"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"injectables/GameService.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["angular/compiler",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"injectables/InMemoryDataService.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"components/GameSessionCreatorComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/paginator",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sort",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/table",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"dependencies.html":{}}}],["api",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"injectables/InMemoryDataService.html":{},"dependencies.html":{}}}],["api/lobby",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/lobby/999",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{},"index.html":{}}}],["app.component",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":291,"title":{},"body":{"injectables/GameService.html":{}}}],["appmodule",{"_index":64,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":72,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arial",{"_index":588,"title":{},"body":{"components/MessagesComponent.html":{}}}],["artifacts",{"_index":662,"title":{},"body":{"index.html":{}}}],["assets/boardimage.png",{"_index":495,"title":{},"body":{"components/GameboardComponent.html":{}}}],["assuming",{"_index":260,"title":{},"body":{"injectables/GameService.html":{}}}],["auto",{"_index":187,"title":{},"body":{"components/BannerComponent.html":{}}}],["automatically",{"_index":652,"title":{},"body":{"index.html":{}}}],["available",{"_index":410,"title":{},"body":{"components/GameSessionComponent.html":{},"interfaces/Player.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["available=${player.available",{"_index":319,"title":{},"body":{"injectables/GameService.html":{}}}],["background",{"_index":162,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/MessagesComponent.html":{}}}],["badge",{"_index":452,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["banner",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{}}}],["banner'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["banner.component.css",{"_index":152,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner.component.html",{"_index":153,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner/banner.component",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["bannercomponent",{"_index":47,"title":{"components/BannerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["better",{"_index":354,"title":{},"body":{"injectables/GameService.html":{}}}],["black",{"_index":200,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{}}}],["block",{"_index":178,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{}}}],["boardimage",{"_index":493,"title":{},"body":{"components/GameboardComponent.html":{}}}],["body",{"_index":530,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["boolean",{"_index":598,"title":{},"body":{"interfaces/Player.html":{}}}],["bootstrap",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":165,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/MessagesComponent.html":{}}}],["bottom",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/GameSessionComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["box",{"_index":188,"title":{},"body":{"components/BannerComponent.html":{}}}],["browse",{"_index":689,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":661,"title":{},"body":{"index.html":{}}}],["button",{"_index":429,"title":{},"body":{"components/GameSessionComponent.html":{},"components/GameboardComponent.html":{}}}],["button.selected",{"_index":447,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["button.selected:active",{"_index":451,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["button.selected:hover",{"_index":449,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["button:active",{"_index":444,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["button:hover",{"_index":440,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["capabilities",{"_index":679,"title":{},"body":{"index.html":{}}}],["card",{"_index":202,"title":{"interfaces/Card.html":{}},"body":{"interfaces/Card.html":{},"components/GameboardComponent.html":{},"interfaces/Player.html":{},"coverage.html":{}}}],["cardinhand",{"_index":596,"title":{},"body":{"interfaces/Player.html":{}}}],["cardtype",{"_index":205,"title":{},"body":{"interfaces/Card.html":{},"miscellaneous/enumerations.html":{}}}],["catcherror",{"_index":299,"title":{},"body":{"injectables/GameService.html":{}}}],["catcherror(this.handleerror('createsession",{"_index":337,"title":{},"body":{"injectables/GameService.html":{}}}],["catcherror(this.handleerror('exitgame",{"_index":345,"title":{},"body":{"injectables/GameService.html":{}}}],["catcherror(this.handleerror('getlobby",{"_index":320,"title":{},"body":{"injectables/GameService.html":{}}}],["catcherror(this.handleerror('selectplayer",{"_index":329,"title":{},"body":{"injectables/GameService.html":{}}}],["center",{"_index":181,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameboardComponent.html":{}}}],["change",{"_index":654,"title":{},"body":{"index.html":{}}}],["character",{"_index":280,"title":{},"body":{"injectables/GameService.html":{},"components/GameSessionComponent.html":{}}}],["characters",{"_index":411,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["check",{"_index":683,"title":{},"body":{"index.html":{}}}],["choice",{"_index":674,"title":{},"body":{"index.html":{}}}],["class",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"injectables/InMemoryDataService.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{}}}],["clear",{"_index":568,"title":{},"body":{"injectables/MessageService.html":{},"components/MessagesComponent.html":{}}}],["clear:hover",{"_index":594,"title":{},"body":{"components/MessagesComponent.html":{}}}],["cli",{"_index":641,"title":{},"body":{"index.html":{}}}],["clue",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":656,"title":{},"body":{"index.html":{}}}],["colonel",{"_index":560,"title":{},"body":{"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":163,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/MessagesComponent.html":{},"interfaces/Player.html":{}}}],["command",{"_index":675,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{},"overview.html":{}}}],["confirmed",{"_index":406,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["console",{"_index":352,"title":{},"body":{"injectables/GameService.html":{}}}],["console.error(error",{"_index":351,"title":{},"body":{"injectables/GameService.html":{}}}],["const",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"injectables/InMemoryDataService.html":{}}}],["constructor",{"_index":156,"title":{},"body":{"components/BannerComponent.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"components/MessagesComponent.html":{}}}],["constructor(fb",{"_index":465,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["constructor(http",{"_index":232,"title":{},"body":{"injectables/GameService.html":{}}}],["constructor(messageservice",{"_index":510,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"components/MessagesComponent.html":{}}}],["constructor(private",{"_index":482,"title":{},"body":{"components/GameSessionCreatorComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["constructor(public",{"_index":582,"title":{},"body":{"components/MessagesComponent.html":{}}}],["constructor(route",{"_index":374,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["consumption",{"_index":357,"title":{},"body":{"injectables/GameService.html":{}}}],["container",{"_index":497,"title":{},"body":{"components/GameboardComponent.html":{}}}],["content",{"_index":198,"title":{},"body":{"components/BannerComponent.html":{},"injectables/GameService.html":{},"components/GameboardComponent.html":{}}}],["continue",{"_index":270,"title":{},"body":{"injectables/GameService.html":{}}}],["coordinate",{"_index":597,"title":{},"body":{"interfaces/Player.html":{}}}],["count",{"_index":246,"title":{},"body":{"injectables/GameService.html":{},"components/GameSessionCreatorComponent.html":{}}}],["coverage",{"_index":599,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":161,"title":{},"body":{"components/BannerComponent.html":{},"injectables/GameService.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{}}}],["createdb",{"_index":551,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["creategame",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creategameapiurl",{"_index":221,"title":{},"body":{"injectables/GameService.html":{},"miscellaneous/variables.html":{}}}],["creategamesession",{"_index":464,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["createsession",{"_index":226,"title":{},"body":{"injectables/GameService.html":{}}}],["createsession(gamesessiondata",{"_index":237,"title":{},"body":{"injectables/GameService.html":{}}}],["creating",{"_index":537,"title":{},"body":{"interceptors/HttpMockLobbyInterceptor.html":{}}}],["creator",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameSessionCreatorComponent.html":{}}}],["creator'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["creator.component",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["creator.component.css",{"_index":461,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["creator.component.html",{"_index":462,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["creator.component.ts",{"_index":460,"title":{},"body":{"components/GameSessionCreatorComponent.html":{},"coverage.html":{}}}],["creator.component.ts:15",{"_index":478,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["creator.component.ts:18",{"_index":468,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["creator.component.ts:26",{"_index":471,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["creator.component.ts:29",{"_index":470,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["creator/game",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameSessionCreatorComponent.html":{},"coverage.html":{}}}],["css",{"_index":584,"title":{},"body":{"components/MessagesComponent.html":{}}}],["cursor",{"_index":430,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["dashboard",{"_index":499,"title":{},"body":{"components/GameboardComponent.html":{}}}],["data",{"_index":539,"title":{},"body":{"interceptors/HttpMockLobbyInterceptor.html":{}}}],["data.service",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["data.service.ts",{"_index":550,"title":{},"body":{"injectables/InMemoryDataService.html":{},"coverage.html":{}}}],["data.service.ts:8",{"_index":552,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["dataencapsulation",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["decoration",{"_index":174,"title":{},"body":{"components/BannerComponent.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameService.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"injectables/InMemoryDataService.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{}}}],["dependencies",{"_index":66,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":242,"title":{},"body":{"injectables/GameService.html":{}}}],["dev",{"_index":649,"title":{},"body":{"index.html":{}}}],["development",{"_index":644,"title":{},"body":{"index.html":{}}}],["directive",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["directives",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":660,"title":{},"body":{"index.html":{}}}],["directory",{"_index":665,"title":{},"body":{"index.html":{}}}],["display",{"_index":176,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{}}}],["dist",{"_index":664,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":600,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["dynamic",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":672,"title":{},"body":{"index.html":{}}}],["e6e6e6",{"_index":442,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["eee",{"_index":418,"title":{},"body":{"components/GameSessionComponent.html":{},"components/MessagesComponent.html":{}}}],["element",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["empty",{"_index":363,"title":{},"body":{"injectables/GameService.html":{}}}],["end",{"_index":671,"title":{},"body":{"index.html":{}}}],["enum",{"_index":206,"title":{},"body":{"interfaces/Card.html":{}}}],["enumerations",{"_index":636,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":304,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["env.gameserverapiurl}:${env.gameserverport}/${env.creategameapiurl",{"_index":283,"title":{},"body":{"injectables/GameService.html":{}}}],["env.gameserverapiurl}:${env.gameserverport}/${env.exitgameapiurl",{"_index":285,"title":{},"body":{"injectables/GameService.html":{}}}],["env.gameserverapiurl}:${env.gameserverport}/${env.lobbyapiurl",{"_index":293,"title":{},"body":{"injectables/GameService.html":{}}}],["env.gameserverapiurl}:${env.gameserverport}/${env.selectplayerapiurl",{"_index":295,"title":{},"body":{"injectables/GameService.html":{}}}],["environment",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"injectables/GameService.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":302,"title":{},"body":{"injectables/GameService.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["error",{"_index":273,"title":{},"body":{"injectables/GameService.html":{}}}],["error.message",{"_index":359,"title":{},"body":{"injectables/GameService.html":{}}}],["etc",{"_index":247,"title":{},"body":{"injectables/GameService.html":{}}}],["eventemitter",{"_index":479,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["execute",{"_index":668,"title":{},"body":{"index.html":{}}}],["exit",{"_index":252,"title":{},"body":{"injectables/GameService.html":{},"components/GameSessionComponent.html":{}}}],["exit:hover",{"_index":423,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["exitgame",{"_index":227,"title":{},"body":{"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"miscellaneous/variables.html":{}}}],["exitgame(playerid",{"_index":249,"title":{},"body":{"injectables/GameService.html":{}}}],["exitgame/999",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exitgameapiurl",{"_index":222,"title":{},"body":{"injectables/GameService.html":{},"miscellaneous/variables.html":{}}}],["exitgameurl",{"_index":338,"title":{},"body":{"injectables/GameService.html":{}}}],["exiting",{"_index":254,"title":{},"body":{"injectables/GameService.html":{}}}],["export",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"interfaces/Card.html":{},"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"injectables/InMemoryDataService.html":{},"interfaces/Lobby.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{},"interfaces/Player.html":{}}}],["exports",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["fafafa",{"_index":446,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["failed",{"_index":269,"title":{},"body":{"injectables/GameService.html":{}}}],["false",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":587,"title":{},"body":{"components/MessagesComponent.html":{}}}],["fb",{"_index":469,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["fetch",{"_index":308,"title":{},"body":{"injectables/GameService.html":{},"interceptors/HttpMockLobbyInterceptor.html":{}}}],["fff",{"_index":179,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/MessagesComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"interfaces/Card.html":{},"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"injectables/InMemoryDataService.html":{},"interfaces/Lobby.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{},"interfaces/Player.html":{},"coverage.html":{}}}],["files",{"_index":655,"title":{},"body":{"index.html":{}}}],["first",{"_index":677,"title":{},"body":{"index.html":{}}}],["flex",{"_index":192,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{}}}],["flexbox",{"_index":190,"title":{},"body":{"components/BannerComponent.html":{}}}],["font",{"_index":170,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/MessagesComponent.html":{}}}],["form",{"_index":487,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["formbuilder",{"_index":466,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["formdata",{"_index":238,"title":{},"body":{"injectables/GameService.html":{}}}],["full",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":680,"title":{},"body":{"index.html":{}}}],["g.gameid",{"_index":402,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["game",{"_index":52,"title":{"interfaces/Game.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"components/MessagesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["game.service",{"_index":389,"title":{},"body":{"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{}}}],["gameboard",{"_index":490,"title":{},"body":{"components/GameboardComponent.html":{}}}],["gameboard'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["gameboard.component.css",{"_index":491,"title":{},"body":{"components/GameboardComponent.html":{}}}],["gameboard.component.html",{"_index":492,"title":{},"body":{"components/GameboardComponent.html":{}}}],["gameboard/gameboard.component",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["gameboardcomponent",{"_index":49,"title":{"components/GameboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gameid",{"_index":211,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{}}}],["gamename",{"_index":212,"title":{},"body":{"interfaces/Game.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interfaces/Lobby.html":{}}}],["gameserverapiurl",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gameserverport",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gameservice",{"_index":217,"title":{"injectables/GameService.html":{}},"body":{"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"coverage.html":{}}}],["gamesessioncomponent",{"_index":51,"title":{"components/GameSessionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gamesessioncreatorcomponent",{"_index":54,"title":{"components/GameSessionCreatorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gamesessiondata",{"_index":243,"title":{},"body":{"injectables/GameService.html":{}}}],["gamesessionform",{"_index":463,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["generate",{"_index":658,"title":{},"body":{"index.html":{}}}],["generated",{"_index":640,"title":{},"body":{"index.html":{}}}],["getgamesession",{"_index":371,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["getlobby",{"_index":228,"title":{},"body":{"injectables/GameService.html":{}}}],["getlobby(gameid",{"_index":256,"title":{},"body":{"injectables/GameService.html":{}}}],["getting",{"_index":638,"title":{"index.html":{}},"body":{}}],["given",{"_index":279,"title":{},"body":{"injectables/GameService.html":{}}}],["go",{"_index":682,"title":{},"body":{"index.html":{}}}],["graph",{"_index":690,"title":{},"body":{"modules.html":{}}}],["green",{"_index":564,"title":{},"body":{"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["grid",{"_index":496,"title":{},"body":{"components/GameboardComponent.html":{}}}],["h1",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["h2",{"_index":585,"title":{},"body":{"components/MessagesComponent.html":{}}}],["handle",{"_index":267,"title":{},"body":{"injectables/GameService.html":{}}}],["handleerror",{"_index":229,"title":{},"body":{"injectables/GameService.html":{}}}],["handleerror(operation",{"_index":263,"title":{},"body":{"injectables/GameService.html":{}}}],["hasn't",{"_index":261,"title":{},"body":{"injectables/GameService.html":{}}}],["headers",{"_index":288,"title":{},"body":{"injectables/GameService.html":{}}}],["height",{"_index":438,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["help",{"_index":681,"title":{},"body":{"index.html":{}}}],["helvetica",{"_index":589,"title":{},"body":{"components/MessagesComponent.html":{}}}],["html",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["http",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"injectables/GameService.html":{},"miscellaneous/variables.html":{}}}],["http://localhost",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":651,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":233,"title":{},"body":{"injectables/GameService.html":{}}}],["httpclientinmemorywebapimodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientinmemorywebapimodule.forroot",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":518,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["httphandler",{"_index":515,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["httpheaders",{"_index":290,"title":{},"body":{"injectables/GameService.html":{}}}],["httpinterceptor",{"_index":519,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["httpinterceptorproviders",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpmockgamesessioninterceptor",{"_index":506,"title":{"interceptors/HttpMockGameSessionInterceptor.html":{}},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpmocklobbyinterceptor",{"_index":532,"title":{"interceptors/HttpMockLobbyInterceptor.html":{}},"body":{"interceptors/HttpMockLobbyInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpmockplayerinterceptor",{"_index":541,"title":{"interceptors/HttpMockPlayerInterceptor.html":{}},"body":{"interceptors/HttpMockPlayerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpoptions",{"_index":223,"title":{},"body":{"injectables/GameService.html":{}}}],["httprequest",{"_index":513,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["httpresponse",{"_index":520,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["id",{"_index":255,"title":{},"body":{"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"injectables/InMemoryDataService.html":{},"interfaces/Lobby.html":{},"interfaces/Player.html":{},"miscellaneous/variables.html":{}}}],["id=${game.gameid",{"_index":336,"title":{},"body":{"injectables/GameService.html":{}}}],["id=${player.id",{"_index":317,"title":{},"body":{"injectables/GameService.html":{}}}],["id=${selectedplayer.id",{"_index":328,"title":{},"body":{"injectables/GameService.html":{}}}],["identifier",{"_index":601,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":150,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"injectables/InMemoryDataService.html":{},"components/MessagesComponent.html":{},"index.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"injectables/InMemoryDataService.html":{},"interfaces/Lobby.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{},"interfaces/Player.html":{}}}],["imports",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"interfaces/Card.html":{},"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"injectables/InMemoryDataService.html":{},"interfaces/Lobby.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{},"interfaces/Player.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"interfaces/Card.html":{},"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"injectables/InMemoryDataService.html":{},"interfaces/Lobby.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{},"interfaces/Player.html":{}}}],["infrastructure",{"_index":350,"title":{},"body":{"injectables/GameService.html":{}}}],["injectable",{"_index":216,"title":{"injectables/GameService.html":{},"injectables/InMemoryDataService.html":{},"injectables/MessageService.html":{}},"body":{"injectables/GameService.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"injectables/InMemoryDataService.html":{},"injectables/MessageService.html":{},"coverage.html":{}}}],["injectables",{"_index":218,"title":{},"body":{"injectables/GameService.html":{},"injectables/InMemoryDataService.html":{},"injectables/MessageService.html":{},"overview.html":{}}}],["inline",{"_index":177,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{}}}],["inmemorydataservice",{"_index":98,"title":{"injectables/InMemoryDataService.html":{}},"body":{"modules/AppModule.html":{},"injectables/InMemoryDataService.html":{},"coverage.html":{}}}],["inmemorydbservice",{"_index":553,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["input",{"_index":388,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["instead",{"_index":353,"title":{},"body":{"injectables/GameService.html":{}}}],["intercept",{"_index":509,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["intercept(req",{"_index":512,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["interceptor",{"_index":505,"title":{"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptors",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["interceptors/httpmockgamesessioninterceptor.ts",{"_index":508,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"coverage.html":{}}}],["interceptors/httpmockgamesessioninterceptor.ts:10",{"_index":511,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{}}}],["interceptors/httpmockgamesessioninterceptor.ts:15",{"_index":516,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{}}}],["interceptors/httpmocklobbyinterceptor.ts",{"_index":533,"title":{},"body":{"interceptors/HttpMockLobbyInterceptor.html":{},"coverage.html":{}}}],["interceptors/httpmocklobbyinterceptor.ts:10",{"_index":534,"title":{},"body":{"interceptors/HttpMockLobbyInterceptor.html":{}}}],["interceptors/httpmocklobbyinterceptor.ts:15",{"_index":535,"title":{},"body":{"interceptors/HttpMockLobbyInterceptor.html":{}}}],["interceptors/httpmockplayerinterceptor.ts",{"_index":542,"title":{},"body":{"interceptors/HttpMockPlayerInterceptor.html":{},"coverage.html":{}}}],["interceptors/httpmockplayerinterceptor.ts:10",{"_index":543,"title":{},"body":{"interceptors/HttpMockPlayerInterceptor.html":{}}}],["interceptors/httpmockplayerinterceptor.ts:15",{"_index":544,"title":{},"body":{"interceptors/HttpMockPlayerInterceptor.html":{}}}],["interceptors/index.ts",{"_index":612,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":201,"title":{"interfaces/Card.html":{},"interfaces/Game.html":{},"interfaces/Lobby.html":{},"interfaces/Player.html":{}},"body":{"interfaces/Card.html":{},"interfaces/Game.html":{},"interfaces/Lobby.html":{},"interfaces/Player.html":{},"coverage.html":{}}}],["interfaces",{"_index":203,"title":{},"body":{"interfaces/Card.html":{},"interfaces/Game.html":{},"interfaces/Lobby.html":{},"interfaces/Player.html":{},"overview.html":{}}}],["items",{"_index":436,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["job",{"_index":355,"title":{},"body":{"injectables/GameService.html":{}}}],["joingame",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joingame/999",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":670,"title":{},"body":{"index.html":{}}}],["keep",{"_index":360,"title":{},"body":{"injectables/GameService.html":{}}}],["l",{"_index":396,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["layoutmodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["left",{"_index":434,"title":{},"body":{"components/GameSessionComponent.html":{},"components/GameboardComponent.html":{}}}],["legend",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["less",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["li",{"_index":428,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["lighter",{"_index":593,"title":{},"body":{"components/MessagesComponent.html":{}}}],["line",{"_index":457,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["list",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"components/GameSessionComponent.html":{}}}],["lobby",{"_index":259,"title":{"interfaces/Lobby.html":{}},"body":{"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interfaces/Lobby.html":{},"coverage.html":{}}}],["lobby.id",{"_index":314,"title":{},"body":{"injectables/GameService.html":{}}}],["lobby.players.foreach",{"_index":315,"title":{},"body":{"injectables/GameService.html":{}}}],["lobbyapiurl",{"_index":224,"title":{},"body":{"injectables/GameService.html":{},"miscellaneous/variables.html":{}}}],["location",{"_index":376,"title":{},"body":{"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{}}}],["log",{"_index":230,"title":{},"body":{"injectables/GameService.html":{}}}],["log(message",{"_index":274,"title":{},"body":{"injectables/GameService.html":{}}}],["logging",{"_index":349,"title":{},"body":{"injectables/GameService.html":{}}}],["margin",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["matbuttonmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"interfaces/Card.html":{},"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"injectables/InMemoryDataService.html":{},"interfaces/Lobby.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{},"interfaces/Player.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matgridlistmodule",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginatormodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["matsortmodule",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["media",{"_index":195,"title":{},"body":{"components/BannerComponent.html":{}}}],["memory",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"injectables/InMemoryDataService.html":{},"coverage.html":{},"dependencies.html":{}}}],["message",{"_index":214,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{}}}],["message.service",{"_index":303,"title":{},"body":{"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"components/MessagesComponent.html":{}}}],["messages",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{}}}],["messages.component.css",{"_index":576,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messages.component.html",{"_index":577,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messages/messages.component",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["messagescomponent",{"_index":57,"title":{"components/MessagesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["messagescomponent's",{"_index":583,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messageservice",{"_index":234,"title":{"injectables/MessageService.html":{}},"body":{"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{},"coverage.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["method",{"_index":251,"title":{},"body":{"injectables/GameService.html":{}}}],["methods",{"_index":154,"title":{},"body":{"components/BannerComponent.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"injectables/InMemoryDataService.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{}}}],["min",{"_index":184,"title":{},"body":{"components/BannerComponent.html":{}}}],["miscellaneous",{"_index":635,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":536,"title":{},"body":{"interceptors/HttpMockLobbyInterceptor.html":{}}}],["module",{"_index":63,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{}}],["modules",{"_index":65,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":502,"title":{},"body":{"components/GameboardComponent.html":{},"index.html":{}}}],["mr",{"_index":563,"title":{},"body":{"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["mrs",{"_index":554,"title":{},"body":{"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["multi",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mustard",{"_index":561,"title":{},"body":{"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"interfaces/Card.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"injectables/InMemoryDataService.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{},"interfaces/Player.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name=${game.gamename",{"_index":344,"title":{},"body":{"injectables/GameService.html":{}}}],["name=${player.name",{"_index":318,"title":{},"body":{"injectables/GameService.html":{}}}],["navigate",{"_index":650,"title":{},"body":{"index.html":{}}}],["need",{"_index":676,"title":{},"body":{"index.html":{}}}],["new",{"_index":289,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":514,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["next.handle(req",{"_index":531,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["ng",{"_index":647,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":155,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/MessagesComponent.html":{}}}],["none",{"_index":175,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{}}}],["number",{"_index":215,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Lobby.html":{},"interfaces/Player.html":{}}}],["object",{"_index":287,"title":{},"body":{"injectables/GameService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":248,"title":{},"body":{"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["of(new",{"_index":527,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["of(result",{"_index":364,"title":{},"body":{"injectables/GameService.html":{}}}],["oninit",{"_index":151,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/MessagesComponent.html":{}}}],["onselect",{"_index":372,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["onselect(player",{"_index":382,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["operation",{"_index":268,"title":{},"body":{"injectables/GameService.html":{}}}],["optional",{"_index":213,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{},"interfaces/Player.html":{}}}],["order",{"_index":191,"title":{},"body":{"components/BannerComponent.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":480,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["outside",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":684,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":409,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["package",{"_index":621,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":168,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/MessagesComponent.html":{}}}],["page",{"_index":686,"title":{},"body":{"index.html":{}}}],["param",{"_index":306,"title":{},"body":{"injectables/GameService.html":{}}}],["parameters",{"_index":236,"title":{},"body":{"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{}}}],["parseint(this.route.snapshot.parammap.get('id",{"_index":391,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["path",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["peacock",{"_index":558,"title":{},"body":{"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":311,"title":{},"body":{"injectables/GameService.html":{}}}],["platform",{"_index":673,"title":{},"body":{"index.html":{}}}],["player",{"_index":245,"title":{"interfaces/Player.html":{}},"body":{"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"interfaces/Lobby.html":{},"interfaces/Player.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["player.available",{"_index":547,"title":{},"body":{"interceptors/HttpMockPlayerInterceptor.html":{}}}],["player.id",{"_index":412,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["player.name",{"_index":413,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["playercount",{"_index":474,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["playerid",{"_index":253,"title":{},"body":{"injectables/GameService.html":{}}}],["players",{"_index":424,"title":{},"body":{"components/GameSessionComponent.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"injectables/InMemoryDataService.html":{},"interfaces/Lobby.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["players.ts",{"_index":615,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["plum",{"_index":556,"title":{},"body":{"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["pointer",{"_index":431,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["position",{"_index":432,"title":{},"body":{"components/GameSessionComponent.html":{},"components/GameboardComponent.html":{}}}],["post",{"_index":523,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["private",{"_index":220,"title":{},"body":{"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/MessagesComponent.html":{}}}],["production",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["professor",{"_index":555,"title":{},"body":{"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":639,"title":{},"body":{"index.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Card.html":{},"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"interfaces/Lobby.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{},"interfaces/Player.html":{},"properties.html":{}}}],["provide",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":305,"title":{},"body":{"injectables/GameService.html":{},"injectables/InMemoryDataService.html":{},"injectables/MessageService.html":{}}}],["providers",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":578,"title":{},"body":{"components/MessagesComponent.html":{}}}],["radius",{"_index":166,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/MessagesComponent.html":{}}}],["reactiveformsmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["redirectto",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":685,"title":{},"body":{"index.html":{}}}],["relative",{"_index":433,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["reload",{"_index":653,"title":{},"body":{"index.html":{}}}],["remote",{"_index":348,"title":{},"body":{"injectables/GameService.html":{}}}],["req",{"_index":517,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["req.body",{"_index":546,"title":{},"body":{"interceptors/HttpMockPlayerInterceptor.html":{}}}],["req.method",{"_index":522,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["req.url.includes(environment.creategameapiurl",{"_index":524,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{}}}],["req.url.includes(environment.lobbyapiurl",{"_index":538,"title":{},"body":{"interceptors/HttpMockLobbyInterceptor.html":{}}}],["req.url.includes(environment.selectplayerapiurl",{"_index":545,"title":{},"body":{"interceptors/HttpMockPlayerInterceptor.html":{}}}],["request",{"_index":241,"title":{},"body":{"injectables/GameService.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["requests",{"_index":521,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["reset",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result",{"_index":264,"title":{},"body":{"injectables/GameService.html":{}}}],["results",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"interfaces/Card.html":{},"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"injectables/InMemoryDataService.html":{},"interfaces/Lobby.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{},"interfaces/Player.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":297,"title":{},"body":{"injectables/GameService.html":{}}}],["return",{"_index":272,"title":{},"body":{"injectables/GameService.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"injectables/InMemoryDataService.html":{}}}],["returning",{"_index":362,"title":{},"body":{"injectables/GameService.html":{}}}],["returns",{"_index":159,"title":{},"body":{"components/BannerComponent.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"injectables/InMemoryDataService.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{}}}],["right",{"_index":458,"title":{},"body":{"components/GameSessionComponent.html":{},"components/GameboardComponent.html":{}}}],["room",{"_index":209,"title":{},"body":{"interfaces/Card.html":{},"miscellaneous/enumerations.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameService.html":{},"injectables/InMemoryDataService.html":{},"injectables/MessageService.html":{}}}],["root'},{'name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["route",{"_index":378,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["router",{"_index":467,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["routermodule",{"_index":136,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":137,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":646,"title":{},"body":{"index.html":{}}}],["running",{"_index":361,"title":{},"body":{"injectables/GameService.html":{},"index.html":{}}}],["rxjs",{"_index":298,"title":{},"body":{"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":301,"title":{},"body":{"injectables/GameService.html":{}}}],["sans",{"_index":590,"title":{},"body":{"components/MessagesComponent.html":{}}}],["scaffolding",{"_index":657,"title":{},"body":{"index.html":{}}}],["see",{"_index":258,"title":{},"body":{"injectables/GameService.html":{}}}],["select",{"_index":278,"title":{},"body":{"injectables/GameService.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["selected",{"_index":281,"title":{},"body":{"injectables/GameService.html":{},"components/GameSessionComponent.html":{}}}],["selectedplayer",{"_index":370,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["selectedplayer.id",{"_index":416,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["selectedplayer.name",{"_index":414,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["selection",{"_index":404,"title":{},"body":{"components/GameSessionComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["selectplayer",{"_index":231,"title":{},"body":{"injectables/GameService.html":{}}}],["selectplayer(player",{"_index":276,"title":{},"body":{"injectables/GameService.html":{}}}],["selectplayerapiurl",{"_index":225,"title":{},"body":{"injectables/GameService.html":{},"miscellaneous/variables.html":{}}}],["selectplayerurl",{"_index":321,"title":{},"body":{"injectables/GameService.html":{}}}],["self",{"_index":194,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{}}}],["send",{"_index":347,"title":{},"body":{"injectables/GameService.html":{}}}],["sends",{"_index":240,"title":{},"body":{"injectables/GameService.html":{}}}],["serif",{"_index":591,"title":{},"body":{"components/MessagesComponent.html":{}}}],["serve",{"_index":648,"title":{},"body":{"index.html":{}}}],["server",{"_index":645,"title":{},"body":{"index.html":{}}}],["session",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"components/MessagesComponent.html":{},"coverage.html":{}}}],["session'},{'name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["session.component",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["session.component.css",{"_index":368,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["session.component.html",{"_index":369,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["session.component.ts",{"_index":367,"title":{},"body":{"components/GameSessionComponent.html":{},"coverage.html":{}}}],["session.component.ts:18",{"_index":386,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["session.component.ts:19",{"_index":377,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["session.component.ts:27",{"_index":381,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["session.component.ts:31",{"_index":380,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["session.component.ts:37",{"_index":379,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["session.component.ts:47",{"_index":383,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["session.component.ts:54",{"_index":384,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["session/${g.gameid",{"_index":485,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["session/:id",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["session/game",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameSessionComponent.html":{},"coverage.html":{}}}],["settings",{"_index":244,"title":{},"body":{"injectables/GameService.html":{}}}],["size",{"_index":171,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/MessagesComponent.html":{}}}],["sizing",{"_index":189,"title":{},"body":{"components/BannerComponent.html":{}}}],["small",{"_index":453,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BannerComponent.html":{},"interfaces/Card.html":{},"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"injectables/InMemoryDataService.html":{},"interfaces/Lobby.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{},"interfaces/Player.html":{},"index.html":{}}}],["src/.../card.ts",{"_index":637,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../game.service.ts",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mock",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/banner/banner.component.ts",{"_index":149,"title":{},"body":{"components/BannerComponent.html":{},"coverage.html":{}}}],["src/app/banner/banner.component.ts:12",{"_index":158,"title":{},"body":{"components/BannerComponent.html":{}}}],["src/app/banner/banner.component.ts:8",{"_index":157,"title":{},"body":{"components/BannerComponent.html":{}}}],["src/app/card.ts",{"_index":204,"title":{},"body":{"interfaces/Card.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/game",{"_index":366,"title":{},"body":{"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"coverage.html":{}}}],["src/app/game.service.ts",{"_index":219,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game.service.ts:113",{"_index":275,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/game.service.ts:19",{"_index":296,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/game.service.ts:20",{"_index":294,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/game.service.ts:21",{"_index":284,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/game.service.ts:22",{"_index":286,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/game.service.ts:24",{"_index":292,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/game.service.ts:26",{"_index":235,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/game.service.ts:36",{"_index":257,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/game.service.ts:54",{"_index":277,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/game.service.ts:68",{"_index":239,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/game.service.ts:82",{"_index":250,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/game.service.ts:99",{"_index":266,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/game.ts",{"_index":210,"title":{},"body":{"interfaces/Game.html":{},"coverage.html":{}}}],["src/app/gameboard/gameboard.component.ts",{"_index":489,"title":{},"body":{"components/GameboardComponent.html":{},"coverage.html":{}}}],["src/app/gameboard/gameboard.component.ts:11",{"_index":494,"title":{},"body":{"components/GameboardComponent.html":{}}}],["src/app/http",{"_index":507,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/in",{"_index":549,"title":{},"body":{"injectables/InMemoryDataService.html":{},"coverage.html":{}}}],["src/app/lobby.ts",{"_index":565,"title":{},"body":{"interfaces/Lobby.html":{},"coverage.html":{}}}],["src/app/message.service.ts",{"_index":566,"title":{},"body":{"injectables/MessageService.html":{},"coverage.html":{}}}],["src/app/message.service.ts:10",{"_index":570,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/message.service.ts:14",{"_index":571,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/message.service.ts:8",{"_index":572,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/messages/messages.component.ts",{"_index":575,"title":{},"body":{"components/MessagesComponent.html":{},"coverage.html":{}}}],["src/app/messages/messages.component.ts:11",{"_index":581,"title":{},"body":{"components/MessagesComponent.html":{}}}],["src/app/messages/messages.component.ts:13",{"_index":580,"title":{},"body":{"components/MessagesComponent.html":{}}}],["src/app/messages/messages.component.ts:9",{"_index":579,"title":{},"body":{"components/MessagesComponent.html":{}}}],["src/app/mock",{"_index":614,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/player.ts",{"_index":595,"title":{},"body":{"interfaces/Player.html":{},"coverage.html":{}}}],["src/environments/environment",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":617,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":618,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":332,"title":{},"body":{"injectables/GameService.html":{},"components/GameSessionComponent.html":{}}}],["start:hover",{"_index":421,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["started",{"_index":262,"title":{"index.html":{}},"body":{"injectables/GameService.html":{}}}],["startgameapiurl",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["startgameurl",{"_index":330,"title":{},"body":{"injectables/GameService.html":{}}}],["startsession",{"_index":373,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["statements",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":528,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["stored",{"_index":663,"title":{},"body":{"index.html":{}}}],["stretch",{"_index":437,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Card.html":{},"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameboardComponent.html":{},"interfaces/Lobby.html":{},"injectables/MessageService.html":{},"interfaces/Player.html":{}}}],["style",{"_index":426,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["submit",{"_index":486,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["subscribe(g",{"_index":400,"title":{},"body":{"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{}}}],["subscribe(l",{"_index":394,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["subscribe(p",{"_index":408,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["support",{"_index":687,"title":{},"body":{"modules.html":{}}}],["suspect",{"_index":207,"title":{},"body":{"interfaces/Card.html":{},"miscellaneous/enumerations.html":{}}}],["svg",{"_index":688,"title":{},"body":{"modules.html":{}}}],["t",{"_index":265,"title":{},"body":{"injectables/GameService.html":{}}}],["table",{"_index":620,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":619,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":300,"title":{},"body":{"injectables/GameService.html":{}}}],["tap((game",{"_index":334,"title":{},"body":{"injectables/GameService.html":{}}}],["tap((selectedplayer",{"_index":325,"title":{},"body":{"injectables/GameService.html":{}}}],["tap(lobby",{"_index":312,"title":{},"body":{"injectables/GameService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["test",{"_index":526,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"index.html":{}}}],["testing",{"_index":678,"title":{},"body":{"index.html":{}}}],["tests",{"_index":667,"title":{},"body":{"index.html":{}}}],["text",{"_index":173,"title":{},"body":{"components/BannerComponent.html":{},"components/GameboardComponent.html":{}}}],["this.creategameapiurl",{"_index":331,"title":{},"body":{"injectables/GameService.html":{}}}],["this.exitgameapiurl}?userid=${playerid}&gamename=${gameid",{"_index":339,"title":{},"body":{"injectables/GameService.html":{}}}],["this.fb.group",{"_index":472,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["this.gameservice.createsession(this.gamesessionform.value",{"_index":483,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["this.gameservice.exitgame(this.selectedplayer.id",{"_index":398,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["this.gameservice.getlobby(gameid",{"_index":393,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["this.gameservice.selectplayer(player",{"_index":407,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["this.getgamesession",{"_index":390,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["this.http.get(lobbyapiurl",{"_index":310,"title":{},"body":{"injectables/GameService.html":{}}}],["this.http.post(exitgameurl",{"_index":342,"title":{},"body":{"injectables/GameService.html":{}}}],["this.http.post(selectplayerurl",{"_index":323,"title":{},"body":{"injectables/GameService.html":{}}}],["this.http.post(startgameurl",{"_index":333,"title":{},"body":{"injectables/GameService.html":{}}}],["this.httpoptions).pipe",{"_index":324,"title":{},"body":{"injectables/GameService.html":{}}}],["this.lobby",{"_index":395,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["this.lobby.id",{"_index":399,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["this.lobbyapiurl}?gameid=${gameid",{"_index":309,"title":{},"body":{"injectables/GameService.html":{}}}],["this.log(\"sending",{"_index":307,"title":{},"body":{"injectables/GameService.html":{}}}],["this.log(`${operation",{"_index":358,"title":{},"body":{"injectables/GameService.html":{}}}],["this.log(`created",{"_index":335,"title":{},"body":{"injectables/GameService.html":{}}}],["this.log(`exiting",{"_index":343,"title":{},"body":{"injectables/GameService.html":{}}}],["this.log(`fetched",{"_index":313,"title":{},"body":{"injectables/GameService.html":{}}}],["this.log(`player",{"_index":316,"title":{},"body":{"injectables/GameService.html":{}}}],["this.log(`selected",{"_index":326,"title":{},"body":{"injectables/GameService.html":{}}}],["this.log(`sending",{"_index":340,"title":{},"body":{"injectables/GameService.html":{}}}],["this.messages",{"_index":574,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.messages.push(message",{"_index":573,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.messageservice.add(\"unable",{"_index":403,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["this.messageservice.add(`exited",{"_index":401,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["this.messageservice.add(`gameservice",{"_index":365,"title":{},"body":{"injectables/GameService.html":{}}}],["this.messageservice.add(`intercepted",{"_index":525,"title":{},"body":{"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{}}}],["this.router.navigate([`/game",{"_index":484,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["this.selectedplayer",{"_index":397,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["this.selectplayerapiurl}?gameid=${gameid",{"_index":322,"title":{},"body":{"injectables/GameService.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":346,"title":{},"body":{"injectables/GameService.html":{}}}],["top",{"_index":488,"title":{},"body":{"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{}}}],["transforming",{"_index":356,"title":{},"body":{"injectables/GameService.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["true",{"_index":548,"title":{},"body":{"interceptors/HttpMockPlayerInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Card.html":{},"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"interceptors/HttpMockGameSessionInterceptor.html":{},"interceptors/HttpMockLobbyInterceptor.html":{},"interceptors/HttpMockPlayerInterceptor.html":{},"interfaces/Lobby.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{},"interfaces/Player.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":385,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["unit",{"_index":666,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":415,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["url",{"_index":341,"title":{},"body":{"injectables/GameService.html":{}}}],["use",{"_index":659,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":282,"title":{},"body":{"injectables/GameService.html":{}}}],["validators",{"_index":481,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["validators.max(6",{"_index":477,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["validators.min(2",{"_index":476,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["validators.required",{"_index":473,"title":{},"body":{"components/GameSessionCreatorComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameService.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"components/GameboardComponent.html":{},"components/MessagesComponent.html":{}}}],["variable",{"_index":609,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":693,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":642,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":669,"title":{},"body":{"index.html":{}}}],["void",{"_index":160,"title":{},"body":{"components/BannerComponent.html":{},"injectables/GameService.html":{},"components/GameSessionComponent.html":{},"components/GameSessionCreatorComponent.html":{},"injectables/MessageService.html":{},"components/MessagesComponent.html":{}}}],["w",{"_index":327,"title":{},"body":{"injectables/GameService.html":{}}}],["wasn't",{"_index":405,"title":{},"body":{"components/GameSessionComponent.html":{}}}],["weapon",{"_index":208,"title":{},"body":{"interfaces/Card.html":{},"miscellaneous/enumerations.html":{}}}],["web",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"injectables/InMemoryDataService.html":{},"dependencies.html":{}}}],["weight",{"_index":592,"title":{},"body":{"components/MessagesComponent.html":{}}}],["white",{"_index":448,"title":{},"body":{"components/GameSessionComponent.html":{},"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["width",{"_index":182,"title":{},"body":{"components/BannerComponent.html":{},"components/GameSessionComponent.html":{}}}],["yes",{"_index":271,"title":{},"body":{"injectables/GameService.html":{}}}],["zone.js",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Clue-Less'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Clue-Less';\n}\n\n    \n\n    \n        {{title}}\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                h1 {\n  margin-bottom: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'GameboardComponent', 'selector': 'app-gameboard'},{'name': 'GameSessionComponent', 'selector': 'app-game-session'},{'name': 'GameSessionCreatorComponent', 'selector': 'app-game-session-creator'},{'name': 'MessagesComponent', 'selector': 'app-messages'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBannerComponent\n\nBannerComponent\n\nAppModule -->\n\nBannerComponent->AppModule\n\n\n\n\n\nGameSessionComponent\n\nGameSessionComponent\n\nAppModule -->\n\nGameSessionComponent->AppModule\n\n\n\n\n\nGameSessionCreatorComponent\n\nGameSessionCreatorComponent\n\nAppModule -->\n\nGameSessionCreatorComponent->AppModule\n\n\n\n\n\nGameboardComponent\n\nGameboardComponent\n\nAppModule -->\n\nGameboardComponent->AppModule\n\n\n\n\n\nMessagesComponent\n\nMessagesComponent\n\nAppModule -->\n\nMessagesComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            BannerComponent\n                        \n                        \n                            GameSessionComponent\n                        \n                        \n                            GameSessionCreatorComponent\n                        \n                        \n                            GameboardComponent\n                        \n                        \n                            MessagesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            !environment\n                        \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { BannerComponent } from './banner/banner.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { GameSessionComponent } from './game-session/game-session.component';\nimport { environment } from 'src/environments/environment';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService } from './in-memory-data.service';\nimport { httpInterceptorProviders } from './http-interceptors';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { GameboardComponent } from './gameboard/gameboard.component';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { GameSessionCreatorComponent } from './game-session-creator/game-session-creator.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BannerComponent,\n    MessagesComponent,\n    GameSessionComponent,\n    GameboardComponent,\n    GameSessionCreatorComponent,\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule,\n        !environment.production ? HttpClientInMemoryWebApiModule.forRoot(\n            InMemoryDataService, {dataEncapsulation: false}\n        ) : [],\n        BrowserAnimationsModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatGridListModule,\n        MatCardModule,\n        MatMenuModule,\n        MatIconModule,\n        MatButtonModule,\n        LayoutModule,\n        ReactiveFormsModule,\n    ],\n  providers: [\n    !environment.production ? httpInterceptorProviders : []\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { BannerComponent } from './banner/banner.component';\nimport { GameSessionComponent } from './game-session/game-session.component';\nimport {GameSessionCreatorComponent} from \"./game-session-creator/game-session-creator.component\";\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/banner', pathMatch: 'full'},\n  { path: 'banner', component: BannerComponent },\n  { path: 'game-session/:id', component: GameSessionComponent },\n  { path: 'game-session-creator', component: GameSessionCreatorComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BannerComponent.html":{"url":"components/BannerComponent.html","title":"component - BannerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BannerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/banner/banner.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-banner\n            \n\n            \n                styleUrls\n                ./banner.component.css\n            \n\n\n\n            \n                templateUrl\n                ./banner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/banner/banner.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/banner/banner.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.css']\n})\nexport class BannerComponent implements OnInit {\n  constructor()\n  {}\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  Create Game Session\n\n\n\n\n    \n\n    \n                \n                    ./banner.component.css\n                \n                a {\n  background-color: #3f525c;\n  border-radius: 2px;\n  padding: 1rem;\n  font-size: 1.2rem;\n  text-decoration: none;\n  display: inline-block;\n  color: #fff;\n  text-align: center;\n  width: 100%;\n  min-width: 70px;\n  margin: .5rem auto;\n  box-sizing: border-box;\n\n  /* flexbox */\n  order: 0;\n  flex: 0 1 auto;\n  align-self: auto;\n}\n\n@media (min-width: 600px) {\n  a {\n    width: 18%;\n    box-sizing: content-box;\n  }\n}\n\na:hover {\n  background-color: black;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Create Game Session'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'GameboardComponent', 'selector': 'app-gameboard'},{'name': 'GameSessionComponent', 'selector': 'app-game-session'},{'name': 'GameSessionCreatorComponent', 'selector': 'app-game-session-creator'},{'name': 'MessagesComponent', 'selector': 'app-messages'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BannerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Card.html":{"url":"interfaces/Card.html","title":"interface - Card","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Card\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/card.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardType\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardType:         CardType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum CardType {\n  SUSPECT,\n  WEAPON,\n  ROOM\n}\n\nexport interface Card {\n  cardType: CardType;\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Game.html":{"url":"interfaces/Game.html","title":"interface - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gameId\n                                        \n                                \n                                \n                                        \n                                            gameName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            Message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gameId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gameId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gameName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gameName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Game {\n  gameId: number;\n  gameName: string;\n  Message?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createGameApiUrl\n                            \n                            \n                                    Private\n                                exitGameApiUrl\n                            \n                            \n                                httpOptions\n                            \n                            \n                                    Private\n                                lobbyApiUrl\n                            \n                            \n                                    Private\n                                selectPlayerApiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createSession\n                            \n                            \n                                exitGame\n                            \n                            \n                                getLobby\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                log\n                            \n                            \n                                selectPlayer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createSession\n                        \n                    \n                \n            \n            \n                \ncreateSession(gameSessionData: FormData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game.service.ts:68\n                \n            \n\n\n            \n                \n                    Sends request to create a game session\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gameSessionData\n                                    \n                                            FormData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nGame session settings (name, player count etc)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exitGame\n                        \n                    \n                \n            \n            \n                \nexitGame(playerId: number, gameId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game.service.ts:82\n                \n            \n\n\n            \n                \n                    Method to exit game session\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    playerId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nPlayer exiting game session\n\n\n                                    \n                                \n                                \n                                    gameId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ngame session ID\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLobby\n                        \n                    \n                \n            \n            \n                \ngetLobby(gameId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game.service.ts:36\n                \n            \n\n\n            \n                \n                    Request to see the lobby of the game session (assuming game hasn't been started yet)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gameId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nID of the game session\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(operation: string, result?: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game.service.ts:99\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Handle Http operation that failed.\nLet the app continue.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    operation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'operation'\n                                    \n\n                                    \n                                        \nname of the operation that failed\n\n\n                                    \n                                \n                                \n                                    result\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \noptional value to return as the observable result\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (error: any) => Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectPlayer\n                        \n                    \n                \n            \n            \n                \nselectPlayer(player: Player, gameId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game.service.ts:54\n                \n            \n\n\n            \n                \n                    Request to select a player for a given game session\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    player\n                                    \n                                                Player\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nPlayer character selected by user\n\n\n                                    \n                                \n                                \n                                    gameId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nID of the game session\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createGameApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${env.gameServerApiUrl}:${env.gameServerPort}/${env.createGameApiUrl}`\n                    \n                \n                    \n                        \n                                Defined in src/app/game.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        exitGameApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${env.gameServerApiUrl}:${env.gameServerPort}/${env.exitGameApiUrl}`\n                    \n                \n                    \n                        \n                                Defined in src/app/game.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/game.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lobbyApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${env.gameServerApiUrl}:${env.gameServerPort}/${env.lobbyApiUrl}`\n                    \n                \n                    \n                        \n                                Defined in src/app/game.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectPlayerApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${env.gameServerApiUrl}:${env.gameServerPort}/${env.selectPlayerApiUrl}`\n                    \n                \n                    \n                        \n                                Defined in src/app/game.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, retry } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Lobby } from './lobby';\n\nimport { environment } from '../environments/environment';\nimport { MessageService } from './message.service';\nimport { Player } from './player';\nimport { Game } from './game';\n\nconst env = environment;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameService {\n\n  private selectPlayerApiUrl = `${env.gameServerApiUrl}:${env.gameServerPort}/${env.selectPlayerApiUrl}`;\n  private lobbyApiUrl = `${env.gameServerApiUrl}:${env.gameServerPort}/${env.lobbyApiUrl}`;\n  private createGameApiUrl = `${env.gameServerApiUrl}:${env.gameServerPort}/${env.createGameApiUrl}`;\n  private exitGameApiUrl = `${env.gameServerApiUrl}:${env.gameServerPort}/${env.exitGameApiUrl}`;\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService) { }\n\n  /**\n   * Request to see the lobby of the game session (assuming game hasn't been started yet)\n   * @param gameId - ID of the game session\n   */\n  getLobby(gameId: number): Observable {\n    this.log(\"Sending request to fetch lobby info\");\n    const lobbyApiUrl = `${this.lobbyApiUrl}?gameId=${gameId}`\n    return this.http.get(lobbyApiUrl)\n      .pipe(\n        tap(lobby => {\n          this.log(`fetched lobby info: ${lobby.id}`);\n          lobby.players.forEach( (player) => this.log(`player id=${player.id}, name=${player.name}, available=${player.available}`));\n        }),\n        catchError(this.handleError('getLobby'))\n      );\n  }\n\n  /**\n   * Request to select a player for a given game session\n   * @param player - Player character selected by user\n   * @param gameId - ID of the game session\n   */\n  selectPlayer(player: Player, gameId: number): Observable {\n    const selectPlayerUrl = `${this.selectPlayerApiUrl}?gameId=${gameId}`;\n    return this.http.post(selectPlayerUrl, player, this.httpOptions).pipe(\n      tap((selectedPlayer: Player) => this.log(`Selected player w/ id=${selectedPlayer.id}`)),\n      catchError(this.handleError('selectPlayer'))\n    );\n  }\n\n\n  /**\n   * Sends request to create a game session\n   *\n   * @param gameSessionData - Game session settings (name, player count etc)\n   */\n  createSession(gameSessionData: FormData): Observable {\n    const startGameUrl = `${this.createGameApiUrl}`;\n    this.log(\"Sending request to start game session\");\n    return this.http.post(startGameUrl, gameSessionData, this.httpOptions).pipe(\n      tap((game: Game) => this.log(`Created Game session w/ id=${game.gameId}`)),\n      catchError(this.handleError('createSession'))\n    );\n  }\n\n  /**\n   * Method to exit game session\n   * @param playerId - Player exiting game session\n   * @param gameId - game session ID\n   */\n  exitGame(playerId: number, gameId: number): Observable {\n    const exitGameUrl = `${this.exitGameApiUrl}?userId=${playerId}&gameName=${gameId}`;\n    this.log(`Sending request to exit game at url: ${exitGameUrl}`);\n\n    return this.http.post(exitGameUrl, playerId, this.httpOptions).pipe(\n      tap((game: Game) => this.log(`Exiting Game session w/ name=${game.gameName}`)),\n      catchError(this.handleError('exitGame'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   *\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError(operation = 'operation', result?: T) {\n    return (error: any): Observable => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n    private log(message: string) {\n      this.messageService.add(`GameService: ${message}`);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameSessionComponent.html":{"url":"components/GameSessionComponent.html","title":"component - GameSessionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameSessionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game-session/game-session.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game-session\n            \n\n            \n                styleUrls\n                ./game-session.component.css\n            \n\n\n\n            \n                templateUrl\n                ./game-session.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lobby\n                            \n                            \n                                    Optional\n                                selectedPlayer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exitGame\n                            \n                            \n                                getGameSession\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelect\n                            \n                            \n                                startSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, gameService: GameService, location: Location, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game-session/game-session.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exitGame\n                        \n                    \n                \n            \n            \n                \nexitGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game-session/game-session.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGameSession\n                        \n                    \n                \n            \n            \n                \ngetGameSession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game-session/game-session.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game-session/game-session.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelect\n                        \n                    \n                \n            \n            \n                \nonSelect(player: Player)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game-session/game-session.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    player\n                                    \n                                                Player\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startSession\n                        \n                    \n                \n            \n            \n                \nstartSession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game-session/game-session.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lobby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Lobby | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game-session/game-session.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectedPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Player\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game-session/game-session.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Location } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Game } from '../game';\nimport { GameService } from '../game.service';\nimport { Lobby } from '../lobby';\nimport { MessageService } from '../message.service';\nimport { Player } from '../player';\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n  selector: 'app-game-session',\n  templateUrl: './game-session.component.html',\n  styleUrls: ['./game-session.component.css']\n})\nexport class GameSessionComponent implements OnInit {\n\n  lobby: Lobby | undefined;\n  selectedPlayer?: Player;\n\n  constructor(\n    private route: ActivatedRoute,\n    private gameService: GameService,\n    private location: Location,\n    private messageService: MessageService) { }\n\n  ngOnInit(): void {\n    this.getGameSession();\n  }\n\n  getGameSession(): void {\n    const gameId = parseInt(this.route.snapshot.paramMap.get('id')!, 10);\n    this.gameService.getLobby(gameId)\n     .subscribe(l => this.lobby = l);\n  }\n\n  exitGame(): void {\n    if (this.selectedPlayer && this.lobby) {\n      this.gameService.exitGame(this.selectedPlayer.id, this.lobby.id)\n        .subscribe(g => this.messageService.add(`Exited game session: ${g.gameId}`));\n    }\n    else {\n      this.messageService.add(\"Unable to exit game: Character selection wasn't confirmed!\")\n    }\n  }\n\n  onSelect(player: Player): void {\n    if (this.lobby) {\n      this.gameService.selectPlayer(player, this.lobby.id)\n        .subscribe(p => this.selectedPlayer = p);\n    }\n  }\n\n  startSession(): void {\n\n  }\n}\n\n    \n\n    \n        \n  Lobby: Available characters\n  \n    \n      \n      {{player.id}}\n      {{player.name}}\n      \n    \n  \n\n\n\n\n  Selected {{selectedPlayer.name | uppercase}}\n  id: {{selectedPlayer.id}}\n\n  Start Game!\n  Exit Game\n\n\n\n    \n\n    \n                \n                    ./game-session.component.css\n                \n                .start {\n  color: #333;\n  background-color: #eee;\n  margin-bottom: 12px;\n  padding: 1rem;\n  border-radius: 4px;\n  font-size: 1rem;\n}\n.start:hover {\n  color: #fff;\n  background-color: #42545C;\n}\n\n.exit {\n  color: #333;\n  background-color: #eee;\n  margin-bottom: 12px;\n  padding: 1rem;\n  border-radius: 4px;\n  font-size: 1rem;\n}\n.exit:hover {\n  color: #fff;\n  background-color: #42545C;\n}\n\n\n.players {\n  margin: 0 0 2em 0;\n  list-style: none;\n  padding: 0;\n  width: 15em;\n  display: flex;\n}\n\n.players li {\n  display: inline;\n}\n\n.players button {\n  flex: 1;\n  cursor: pointer;\n  position: relative;\n  left: 0;\n  background-color: #EEE;\n  margin: .5em;\n  padding: 0;\n  border-radius: 4px;\n  display: flex;\n  align-items: stretch;\n  height: 1.8em;\n}\n\n.players button:hover {\n  color: #2c3a41;\n  background-color: #e6e6e6;\n  left: .1em;\n}\n\n.players button:active {\n  background-color: #525252;\n  color: #fafafa;\n}\n\n.players button.selected {\n  background-color: black;\n  color: white;\n}\n\n.players button.selected:hover {\n  background-color: #505050;\n  color: white;\n}\n\n.players button.selected:active {\n  background-color: black;\n  color: white;\n}\n\n.players .badge {\n  display: inline-block;\n  font-size: small;\n  color: white;\n  padding: 0.8em 0.7em 0 0.7em;\n  background-color: #405061;\n  line-height: 1em;\n  margin-right: .8em;\n  border-radius: 4px 0 0 4px;\n}\n\n.players .name {\n  align-self: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Lobby: Available characters                  {{player.id}}      {{player.name}}              Selected {{selectedPlayer.name | uppercase}}  id: {{selectedPlayer.id}}  Start Game!  Exit Game'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'GameboardComponent', 'selector': 'app-gameboard'},{'name': 'GameSessionComponent', 'selector': 'app-game-session'},{'name': 'GameSessionCreatorComponent', 'selector': 'app-game-session-creator'},{'name': 'MessagesComponent', 'selector': 'app-messages'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameSessionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameSessionCreatorComponent.html":{"url":"components/GameSessionCreatorComponent.html","title":"component - GameSessionCreatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameSessionCreatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game-session-creator/game-session-creator.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game-session-creator\n            \n\n            \n                styleUrls\n                ./game-session-creator.component.css\n            \n\n\n\n            \n                templateUrl\n                ./game-session-creator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gameSessionForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGameSession\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, gameService: GameService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game-session-creator/game-session-creator.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createGameSession\n                        \n                    \n                \n            \n            \n                \ncreateGameSession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game-session-creator/game-session-creator.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game-session-creator/game-session-creator.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gameSessionForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    name: ['', Validators.required],\n    playerCount: [2, [Validators.required, Validators.min(2), Validators.max(6)]]\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/game-session-creator/game-session-creator.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {FormBuilder, Validators} from \"@angular/forms\";\nimport {GameService} from \"../game.service\";\nimport {Game} from \"../game\";\nimport {Location} from \"@angular/common\";\nimport {Router} from \"@angular/router\";\nimport {MessageService} from \"../message.service\";\n\n@Component({\n  selector: 'app-game-session-creator',\n  templateUrl: './game-session-creator.component.html',\n  styleUrls: ['./game-session-creator.component.css']\n})\nexport class GameSessionCreatorComponent implements OnInit {\n  gameSessionForm = this.fb.group({\n    name: ['', Validators.required],\n    playerCount: [2, [Validators.required, Validators.min(2), Validators.max(6)]]\n  })\n\n  constructor(private fb: FormBuilder,\n              private router: Router,\n              private gameService: GameService,\n              private messageService: MessageService)\n  { }\n\n  ngOnInit(): void {\n  }\n\n  createGameSession() {\n    this.gameService.createSession(this.gameSessionForm.value)\n      .subscribe(g => {\n        this.router.navigate([`/game-session/${g.gameId}`])\n      });\n  }\n\n}\n\n    \n\n    \n        \n  Name: \n  \n\n  Player Count: \n  \n\n\n\n  Submit\n\n\n    \n\n    \n                \n                    ./game-session-creator.component.css\n                \n                \nform {\n  padding-top: 1rem;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Name:     Player Count:     Submit'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'GameboardComponent', 'selector': 'app-gameboard'},{'name': 'GameSessionComponent', 'selector': 'app-game-session'},{'name': 'GameSessionCreatorComponent', 'selector': 'app-game-session-creator'},{'name': 'MessagesComponent', 'selector': 'app-messages'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameSessionCreatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameboardComponent.html":{"url":"components/GameboardComponent.html","title":"component - GameboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/gameboard/gameboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-gameboard\n            \n\n            \n                styleUrls\n                ./gameboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./gameboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boardImage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/gameboard/gameboard.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        boardImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"assets/boardImage.png\"\n                    \n                \n                    \n                        \n                                Defined in src/app/gameboard/gameboard.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-gameboard',\n  templateUrl: './gameboard.component.html',\n  styleUrls: ['./gameboard.component.css']\n})\nexport class GameboardComponent {\n  boardImage: string = \"assets/boardImage.png\";\n  constructor(){}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./gameboard.component.css\n                \n                .grid-container {\n  margin: 20px;\n}\n\n.dashboard-card {\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  right: 15px;\n  bottom: 15px;\n}\n\n.more-button {\n  position: absolute;\n  top: 5px;\n  right: 10px;\n}\n\n.dashboard-card-content {\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'GameboardComponent', 'selector': 'app-gameboard'},{'name': 'GameSessionComponent', 'selector': 'app-game-session'},{'name': 'GameSessionCreatorComponent', 'selector': 'app-game-session-creator'},{'name': 'MessagesComponent', 'selector': 'app-messages'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpMockGameSessionInterceptor.html":{"url":"interceptors/HttpMockGameSessionInterceptor.html","title":"interceptor - HttpMockGameSessionInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpMockGameSessionInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/http-interceptors/httpmockgamesessioninterceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/http-interceptors/httpmockgamesessioninterceptor.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/http-interceptors/httpmockgamesessioninterceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { MessageService } from \"../message.service\";\nimport { Game } from \"../game\";\n\nimport {environment} from \"../../environments/environment\";\n\n@Injectable()\nexport class HttpMockGameSessionInterceptor implements HttpInterceptor {\n\n  constructor(private messageService: MessageService) {}\n\n  // Intercept any requests for Player info (selection)\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    if (req.method == 'POST' && req.url.includes(environment.createGameApiUrl)) {\n      this.messageService.add(`Intercepted request to create game`);\n      let game: Game = {gameId: 1, gameName: \"test-game\"};\n      return of(new HttpResponse({ status: 200, body: game}));\n    }\n\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpMockLobbyInterceptor.html":{"url":"interceptors/HttpMockLobbyInterceptor.html","title":"interceptor - HttpMockLobbyInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpMockLobbyInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/http-interceptors/httpmocklobbyinterceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/http-interceptors/httpmocklobbyinterceptor.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/http-interceptors/httpmocklobbyinterceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { Lobby } from \"../lobby\";\nimport { MessageService } from \"../message.service\";\nimport { PLAYERS } from \"../mock-players\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable()\nexport class HttpMockLobbyInterceptor implements HttpInterceptor {\n\n  constructor(private messageService: MessageService) {}\n\n  // Intercept any requests for Creating game session\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    if (req.method == 'GET' && req.url.includes(environment.lobbyApiUrl)) {\n      this.messageService.add(`Intercepted request to fetch Lobby data`);\n      let lobby: Lobby = { id: 999, gameName: \"test\", players: PLAYERS };\n      return of(new HttpResponse({ status: 200, body: lobby}));\n    }\n\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpMockPlayerInterceptor.html":{"url":"interceptors/HttpMockPlayerInterceptor.html","title":"interceptor - HttpMockPlayerInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpMockPlayerInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/http-interceptors/httpmockplayerinterceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/http-interceptors/httpmockplayerinterceptor.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/http-interceptors/httpmockplayerinterceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { MessageService } from \"../message.service\";\nimport { Player } from \"../player\";\n\nimport {environment} from \"../../environments/environment\";\n\n@Injectable()\nexport class HttpMockPlayerInterceptor implements HttpInterceptor {\n\n  constructor(private messageService: MessageService) {}\n\n  // Intercept any requests for Player info (selection)\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    if (req.method == 'POST' && req.url.includes(environment.selectPlayerApiUrl)) {\n      this.messageService.add(`Intercepted request to select Player`);\n      const player: Player = req.body as Player;\n      player.available = true;\n      return of(new HttpResponse({ status: 200, body: player}));\n    }\n\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InMemoryDataService.html":{"url":"injectables/InMemoryDataService.html","title":"injectable - InMemoryDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InMemoryDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/in-memory-data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createDb\n                        \n                    \n                \n            \n            \n                \ncreateDb()\n                \n            \n\n\n            \n                \n                    Defined in src/app/in-memory-data.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { players: {}; }\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb() {\n    const players = [\n      { id: 1, name: 'Mrs. White'},\n      { id: 2, name: 'Professor Plum'},\n      { id: 3, name: 'Mrs. Peacock'},\n      { id: 4, name: 'Colonel Mustard'},\n      { id: 5, name: 'Mr. Green'}\n    ];\n    return {players};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Lobby.html":{"url":"interfaces/Lobby.html","title":"interface - Lobby","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Lobby\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lobby.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gameName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            players\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gameName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gameName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        players\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        players:         Player[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Player[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Player } from \"./player\";\n\nexport interface Lobby {\n  id: number;\n  gameName: string\n  players: Player[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/message.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                messages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                clear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/message.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/message.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/message.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessagesComponent.html":{"url":"components/MessagesComponent.html","title":"component - MessagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MessagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/messages/messages.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-messages\n            \n\n            \n                styleUrls\n                ./messages.component.css\n            \n\n\n\n            \n                templateUrl\n                ./messages.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                messageService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/messages/messages.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/messages/messages.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/messages/messages.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) {}\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n  Messages\n  Clear messages\n   {{message}} \n\n\n\n    \n\n    \n                \n                    ./messages.component.css\n                \n                /* MessagesComponent's private CSS styles */\nh2 {\n  color: #A80000;\n  font-family: Arial, Helvetica, sans-serif;\n  font-weight: lighter;\n}\n\n.clear {\n  color: #333;\n  background-color: #eee;\n  margin-bottom: 12px;\n  padding: 1rem;\n  border-radius: 4px;\n  font-size: 1rem;\n}\n.clear:hover {\n  color: #fff;\n  background-color: #42545C;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Messages  Clear messages   {{message}} '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'GameboardComponent', 'selector': 'app-gameboard'},{'name': 'GameSessionComponent', 'selector': 'app-game-session'},{'name': 'GameSessionCreatorComponent', 'selector': 'app-game-session-creator'},{'name': 'MessagesComponent', 'selector': 'app-messages'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Player.html":{"url":"interfaces/Player.html","title":"interface - Player","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Player\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/player.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            available\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cardInHand\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            coordinate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        available\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        available:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardInHand\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardInHand:         Card[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Card[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coordinate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coordinate:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Card } from \"./card\";\n\nexport interface Player {\n  id: number;\n  name: string;\n  available: boolean;\n  color?: string;\n  cardInHand?: Card[];\n  coordinate?: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/banner/banner.component.ts\n            \n            component\n            BannerComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/card.ts\n            \n            interface\n            Card\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/game-session-creator/game-session-creator.component.ts\n            \n            component\n            GameSessionCreatorComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/game-session/game-session.component.ts\n            \n            component\n            GameSessionComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/game.service.ts\n            \n            injectable\n            GameService\n            \n                38 %\n                (5/13)\n            \n        \n        \n            \n                \n                src/app/game.service.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game.ts\n            \n            interface\n            Game\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/gameboard/gameboard.component.ts\n            \n            component\n            GameboardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/http-interceptors/httpmockgamesessioninterceptor.ts\n            \n            interceptor\n            HttpMockGameSessionInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/http-interceptors/httpmocklobbyinterceptor.ts\n            \n            interceptor\n            HttpMockLobbyInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/http-interceptors/httpmockplayerinterceptor.ts\n            \n            interceptor\n            HttpMockPlayerInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/http-interceptors/index.ts\n            \n            variable\n            httpInterceptorProviders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/in-memory-data.service.ts\n            \n            injectable\n            InMemoryDataService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/lobby.ts\n            \n            interface\n            Lobby\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/message.service.ts\n            \n            injectable\n            MessageService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/messages/messages.component.ts\n            \n            component\n            MessagesComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/mock-players.ts\n            \n            variable\n            PLAYERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/player.ts\n            \n            interface\n            Player\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.2.0\n        \n            @angular/cdk : ^13.3.1\n        \n            @angular/common : ~13.2.0\n        \n            @angular/compiler : ~13.2.0\n        \n            @angular/core : ~13.2.0\n        \n            @angular/forms : ~13.2.0\n        \n            @angular/material : ^13.3.1\n        \n            @angular/platform-browser : ~13.2.0\n        \n            @angular/platform-browser-dynamic : ~13.2.0\n        \n            @angular/router : ~13.2.0\n        \n            angular-in-memory-web-api : ^0.13.0\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CardType   (src/.../card.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/card.ts\n    \n        \n            \n                \n                    \n                        \n                        CardType\n                    \n                \n                        \n                            \n                                 SUSPECT\n                            \n                        \n                        \n                            \n                                 WEAPON\n                            \n                        \n                        \n                            \n                                 ROOM\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nClue-Less\nThis project was generated with Angular CLI version 13.2.6.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBannerComponent\n\nBannerComponent\n\nAppModule -->\n\nBannerComponent->AppModule\n\n\n\n\n\nGameSessionComponent\n\nGameSessionComponent\n\nAppModule -->\n\nGameSessionComponent->AppModule\n\n\n\n\n\nGameSessionCreatorComponent\n\nGameSessionCreatorComponent\n\nAppModule -->\n\nGameSessionCreatorComponent->AppModule\n\n\n\n\n\nGameboardComponent\n\nGameboardComponent\n\nAppModule -->\n\nGameboardComponent->AppModule\n\n\n\n\n\nMessagesComponent\n\nMessagesComponent\n\nAppModule -->\n\nMessagesComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.1.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            env   (src/.../game.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            httpInterceptorProviders   (src/.../index.ts)\n                        \n                        \n                            PLAYERS   (src/.../mock-players.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  gameServerPort: \"8080\",\n  gameServerApiUrl: \"http://localhost\",\n  lobbyApiUrl: \"api/lobby/999\",\n  selectPlayerApiUrl: \"joingame/999\",\n  startGameApiUrl: \"game\",\n  exitGameApiUrl: \"exitgame/999\",\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  gameServerPort: \"8080\",\n  gameServerApiUrl: \"http://localhost\",\n  lobbyApiUrl: \"api/lobby\",\n  selectPlayerApiUrl: \"joingame\",\n  createGameApiUrl: \"creategame\",\n  exitGameApiUrl: \"exitgame\",\n}\n                    \n                \n\n\n        \n    \n\n    src/app/http-interceptors/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpInterceptorProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  { provide: HTTP_INTERCEPTORS, useClass: HttpMockPlayerInterceptor, multi: true },\n  { provide: HTTP_INTERCEPTORS, useClass: HttpMockLobbyInterceptor, multi: true },\n  { provide: HTTP_INTERCEPTORS, useClass: HttpMockGameSessionInterceptor, multi: true }\n]\n                    \n                \n\n            \n                \n                    Http interceptor providers in outside-in order\n\n                \n            \n\n        \n    \n\n    src/app/mock-players.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PLAYERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Player[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { id: 1, name: 'Mrs. White', available: true},\n  { id: 2, name: 'Professor Plum', available: true},\n  { id: 3, name: 'Mrs. Peacock', available: true},\n  { id: 4, name: 'Colonel Mustard', available: true},\n  { id: 5, name: 'Mr. Green', available: false}\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
